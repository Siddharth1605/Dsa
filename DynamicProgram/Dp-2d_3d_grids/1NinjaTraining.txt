int fun(int day, int n, int l, vector<vector<int>> &points, vector<vector<int>> &dp)
{
    int p = 0;
    int maxi = 0;
    if(day == 0)
    {
        for(int i=0;i<3;i++)
        {
            if(i!=l)
            {
                p = points[day][i];
                maxi = max(p, maxi);
            }
        }
        return dp[day][l] = maxi;
    }
    if(dp[day][l] != -1)   return dp[day][l];

    for(int i=0;i<3;i++)
    {
        if(i != l)
        {
            p = points[day][i] + fun(day - 1, n, i, points, dp);
            maxi = max(p, maxi);
        }
    }
    return dp[day][l] = maxi;
}

int ninjaTraining(int n, vector<vector<int>> &points)
{
    // Write your code here.
    vector<int> prev(4, 0);
    vector<int> temp(4, 0);
    prev[0] = max(points[0][1], points[0][2]);
    prev[1] = max(points[0][0], points[0][2]);
    prev[2] = max(points[0][0], points[0][1]);
    prev[3] = max(points[0][0], max(points[0][1], points[0][2]));

    for(int day=1;day<n;day++)
    {
        for(int last=0;last<=3;last++)
        {
            temp[last] = 0;
            for(int i=0;i<3;i++)
            {
                if(i != last)
                {
                    temp[last] = max(temp[last] , points[day][i] + prev[i]);
                }
            }
        }
        prev = temp;
    }
    return prev[3];
    
}