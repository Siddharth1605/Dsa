class Solution {
public:
    bool allstars(string s, int i)
    {
        for(int k=1;k<=i;k++)
        {
            if(s[k-1] != '*') return false;
        }
        return true;
    }
    bool fun(int i, int j, string s, string p, vector<vector<int>> &dp)
    {
        if(i==0 && j==0)  return true;
        if(j==0 && i>0) return allstars(s, i);
        if(i==0 && j>0) return false;

        if(s[i-1] == p[j-1] || s[i-1] == '?')    return fun(i-1, j-1,s, p, dp);

        if(s[i-1] == '*') return fun(i-1,j,s,p, dp) || fun(i, j-1, s, p, dp);

        return false;

    }
    bool isMatch(string p, string s) {
        int n = s.length();
        int m = p.length();

        vector<vector<bool>> dp(n+1, vector<bool>(m+1,false));

        dp[0][0] = true;
        for(int i=1;i<=n;i++)   dp[i][0] = allstars(s, i);
        for(int j=1;j<=m;j++)   dp[0][j] = false;

        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(s[i-1] == p[j-1] || s[i-1] == '?')
                    dp[i][j] = dp[i-1][j-1];
                else if(s[i-1] == '*')
                    dp[i][j] = dp[i-1][j] || dp[i][j-1];
                else
                    dp[i][j]  = false;
            }
        }
        return dp[n][m];
    }
};