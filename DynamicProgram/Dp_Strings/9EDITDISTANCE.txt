class Solution {
public:
    int fun(int i, int j, string a, string b)
    {
        if(i<0) return j+1;
        if(j<0) return i+1;

        if(a[i] == b[j])    return fun(i-1, j-1, a, b);
        
        int ins = 1 + fun(i, j-1, a, b);
        int rep = 1 + fun(i-1, j-1, a, b);
        int rem = 1 + fun(i-1, j, a, b);

        return min(rep, min(ins, rem));
    }
    int minDistance(string a, string b) {
        int n = a.length();
        int m = b.length();

        vector<vector<int>> dp(n+1, vector<int>(m+1, 0));

        for(int i=0;i<=n;i++)   dp[i][0] = i;
        for(int j=0;j<=m;j++)   dp[0][j] = j;

        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(a[i-1] == b[j-1])    dp[i][j] = dp[i-1][j-1];
                else
                {
                    int ins = 1 + dp[i][j-1];
                    int rep = 1 + dp[i-1][j-1];
                    int rem = 1 + dp[i-1][j];

                    dp[i][j] = min(rep, min(ins, rem));
                }
            }
        }
        return dp[n][m];
    }
};