#include <bits/stdc++.h>
class Solution {
public:
    int minimumDifference(vector<int> &nums) {
    int t = 0;
    int n = nums.size();
    for(int i=0; i<n; i++) t += nums[i];
    
    vector<vector<bool>> dp(n, vector<bool>(t + 1, false));

    for(int i=0; i<n; i++) dp[i][0] = true;
    if(nums[0] <= t) dp[0][t] = true;

    for(int i=1; i<n; i++) {
        for(int k=1; k<=t; k++) {
            bool take = false;
            bool ntake = dp[i-1][k];
            if(k >= nums[i]) take = dp[i-1][k - nums[i]];

            dp[i][k] = take || ntake;
        }
    }

    int mini = 1e9;
    for(int i=0; i<=t; i++) {
        if(dp[n - 1][i] == true) {
            int s1 = i;
            int s2 = t - s1;

            mini = min(mini, abs(s1 - s2));
        }
    }

    return mini;
}

};