class Solution {
public:
    void fun(string s, vector<vector<string>> &ans, int ind, int n, vector<string> path)
    {
        if(ind == n)
        {
            ans.push_back(path);
            return;
        }
        for(int i=ind;i<n;i++)
        {
            if(palindrome(s, ind, i))
            {
                path.push_back(s.substr(ind, i - ind + 1));   
                fun(s, ans, i + 1, n, path);
                path.pop_back();
            }
        }
    }
    bool palindrome(string s, int st, int e)
    {
        while(st<=e)
        {
            if(s[st]!=s[e]) return false;
            st++;
            e--;
        }
        return true;
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;
        vector<string> path;
        fun(s, ans, 0, s.length(), path);
        return ans;
    }
};