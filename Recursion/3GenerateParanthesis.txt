class Solution {
public:
    vector<string> fun(int n, int i, string a, int c)
    {
        vector<string> res;
        if(i==n && c!=0)    return res;
        if(i==n && c==0)    {res.push_back(a); return res;}
        vector<string> open;
        vector<string> close;
        if(i == 0)  open = fun(n,i+1,a+'(', c+1);
        else if(i == n-1)  open = fun(n, i+1, a+')', c-1);
        else
        {
            open = fun(n,i+1, a+'(', c+1);
            if(c>0)
            close = fun(n, i+1, a+')', c-1);
        }
        res.insert(res.end(), open.begin(), open.end());
        res.insert(res.end(), close.begin(), close.end());
        return res;
    }
    vector<string> generateParenthesis(int n) {
        vector<string> ans = fun(2*n, 0, "", 0);
        return ans;
    }
};